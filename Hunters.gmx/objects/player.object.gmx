<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_playTemplate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>s_playMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.paused = 0

grav = 0.2
hsp = 0
vsp = 0 
jumpSpd = 4
moveSpd = 2
mHp = 130
att = 13
xp = 0
mXp = 80
hp = mHp//1
curHp = hp
def = 1
attSpd = 30
crit = 5

useItem = 0
useCooldown = 0
useSprite = s_empty
primSpr = s_shoot
skill1Spr = s_slash
skill2Spr = s_liftoff

autoAttack = 1

regen = 0.4

primary = 0
hurting = 0

walkAnim = s_hunterWalk
idleAnim = s_hunter

lvl = 1
gold = 0
goldMod = 1

cool1 = 5
cool2 = 8

cool1cur = 0
cool2cur = 0

showStats = 1

randomize()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!global.paused)
{
if(hp &lt; 0) hp = 0


if(hp &gt; mHp) hp = mHp

if(hurting &gt; 0) hurting--
if(primary &gt; 0) primary--
if(useCooldown &gt; 0) useCooldown--
if(cool1cur &gt; 0) cool1cur--
if(cool2cur &gt; 0) cool2cur--

if(!hurting) curHp = hp

if(xp &gt;= mXp) levelUp()

hp += (regen/60)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pauseKey = keyboard_check_pressed(vk_escape)
if(pauseKey)
{
if(!global.paused) global.paused = 1
else global.paused = 0
}

if(!global.paused)
{
rightKey = keyboard_check(vk_right)
leftKey = keyboard_check(vk_left)
jumpKey = keyboard_check_pressed(vk_space)
if(autoAttack) primKey = keyboard_check(ord("Z"))
else primKey = keyboard_check_pressed(ord("Z"))
devKey = keyboard_check_pressed(ord("Q"))
skill1Key = keyboard_check_pressed(ord("X"))
skill2Key = keyboard_check_pressed(ord("C"))
statsKey = keyboard_check_pressed(ord("W"))
useKey = keyboard_check_pressed(ord("V"))

if(keyboard_check_pressed(ord("R"))) game_restart()

if(statsKey)
{
if(!showStats) showStats = 1
else showStats = 0
}

if(devKey)
{
//gold += 100000 * goldMod
//levelUp()
//hp -= 10
//hurting = 60
//mHp += irandom(100) + 100
//hp = mHp
xp += ((irandom(15) + 20)*lvl)
//gold += irandom(20) + 10
}
halfSpd = moveSpd/3
move = -(leftKey) + rightKey
if(!primKey) hsp = move * moveSpd
else hsp = move * halfSpd
if(vsp &lt; 10) vsp += grav

if(place_meeting(x,y+1,wall))
{
vsp = jumpKey * -jumpSpd
}

if(place_meeting(x+hsp,y,wall))
{
while(!place_meeting(x+sign(hsp),y,wall))
{
x += sign(hsp)
}
hsp = 0
}
x += hsp
if(place_meeting(x,y+vsp,wall))
{
while(!place_meeting(x,y+sign(vsp),wall))
{
y += sign(vsp)
}
vsp = 0
}
y += vsp
if(place_meeting(x+hsp,y+vsp,wall))
{
 while(!place_meeting(x+sign(hsp), y + sign(vsp), wall))
    {
        x+= sign(hsp)
        y+= sign(vsp)
    }
    hsp = 0;
    vsp = 0;
}


if(primKey and !primary)
{
primary = attSpd
//primaryAttack(class)
with(instance_create(x,y-4,bullet))
{
if(player.image_xscale = 1) dir = 0
else dir = 180
motion_set(dir,12)
}
instance_create(x,y,casing)
}

if(skill1Key and !cool1cur) 
{
cool1cur = (60*cool1)
}
if(skill2Key and !cool2cur) 
{
cool2cur = (60*cool2)
}

if(useKey and !useCooldown and useItem != 0) use(useItem)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>display_set_gui_size(1920,1080)

hpct = hp/mHp
xpct = xp/mXp

hColor = c_lime

if(hpct &lt; 0.7 and hpct &gt; 0.3) hColor = c_orange
else if(hpct &lt; 0.3) hColor = c_red

draw_sprite(s_playHpBack,0,50,50)
draw_sprite_ext(s_playLoss,0,50,50,curHp/mHp,1,0,c_white,(hurting/10))
draw_sprite_ext(s_playHp,0,50,50,hpct,1,0,hColor,1)
draw_sprite(s_xpBarBack,0,50,98)
draw_sprite_ext(s_xpBar,0,50,98,xpct,1,0,c_white,1)
draw_sprite(s_xpBarFront,0,50,98)

draw_sprite_ext(primSpr,0,150,200,1.8,1.8,0,c_white,1)
draw_sprite_ext(skill1Spr,0,250,200,1.8,1.8,0,c_white,1)
draw_sprite_ext(skill2Spr,0,350,200,1.8,1.8,0,c_white,1)
draw_sprite_ext(s_skillBox,0,450,200,1.8,1.8,0,c_white,1)
draw_sprite_ext(useSprite,0,450,200,1.7,1.7,0,c_white,1)
draw_set_font(statFont)
if(useCooldown &gt; 0)
{
draw_set_alpha(0.5)
draw_set_color(c_black)
draw_rectangle(418,170,480,230,0)
draw_set_color(c_white)
draw_set_alpha(1)
draw_text(450,200,string(round(useCooldown/60)))
}
if(cool1cur &gt; 0)
{
draw_set_alpha(0.5)
draw_set_color(c_black)
draw_rectangle(218,170,280,230,0)
draw_set_color(c_white)
draw_set_alpha(1)
draw_text(250,200,string(round(cool1cur/60)))
}
if(cool2cur &gt; 0)
{
draw_set_alpha(0.5)
draw_set_color(c_black)
draw_rectangle(318,170,380,230,0)
draw_set_color(c_white)
draw_set_alpha(1)
draw_text(350,200,string(round(cool2cur/60)))
}
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_set_color(c_red)
draw_text(452,243,"V")
draw_set_color(c_white)
draw_text(152,243,"Z")
draw_text(252,243,"X")
draw_text(352,243,"C")

draw_set_font(hpFont)
draw_sprite(s_playHpFront,0,50,50)

draw_set_halign(fa_left)
draw_set_font(goldFont)
draw_set_color(c_yellow)
draw_text(50,146,string(gold) + " G") 
draw_set_color(c_white)
if(showStats) 
{
draw_set_font(statFont)
draw_text(50,350,"Att: " + string(att) + "#Def: " + string(def) + "#Spd: " + string(moveSpd) + "#AttSpd: " + string(attSpd) + "#Reg: " + string(regen) + "#Crit: " + string(crit) + "#G Mod: " + string(goldMod))
}
draw_set_halign(fa_center)
draw_set_valign(fa_center)
draw_set_color(c_white)
draw_text(300,114, "Lv." + string(lvl))
draw_text(300,74,string(round(hp)) + "/" + string(mHp))



//draw_text(200,100, "HSP " + string(hsp) + "       VSP " + string(vsp))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(move != 0)
{
if(x &gt; xprevious) image_xscale = 1
else if(x &lt; xprevious) image_xscale = -1
else image_xscale = image_xscale
}
if(x != xprevious) 
{
sprite_index = walkAnim
if(!primary) image_speed = 0.2
else image_speed = 0.1
}
else
{
sprite_index = idleAnim
image_speed = 0.4
}
if(y != yprevious)
{
sprite_index = walkAnim
image_index = 3
image_speed = 0
}
draw_sprite_ext(s_pistol, 0, x+(4*image_xscale),y-2,image_xscale,1,0,c_white,1)
draw_self()

if(global.paused) image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
